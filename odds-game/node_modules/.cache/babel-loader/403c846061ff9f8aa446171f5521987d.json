{"ast":null,"code":"var _jsxFileName = \"/Users/mariosmastermachinezeta/Odds Game/odds-game/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'; //import App from './App';\n\nimport reportWebVitals from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet pOne;\nlet pTwo;\nlet maxO;\nlet outPut = null;\nlet flag = 0;\n\nclass Hello extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: '',\n      //0 - start, 1 - maxOdd set, 2 - playerOne set, 3 - playerTwo set \n      gameStage: 0\n    };\n    this.addValue = this.addValue.bind(this);\n    this.updateInput = this.updateInput.bind(this);\n  }\n\n  addValue(evt) {\n    console.log(\"Passing: \" + this.state.input);\n    evt.preventDefault();\n\n    if (this.state.gameStage === 0) {\n      maxO = this.state.input;\n      alert('Your input value is: ' + maxO);\n      this.setState({\n        gameStage: 1,\n        input: ''\n      });\n    } else if (this.state.gameStage === 1) {\n      pOne = this.state.input;\n      alert(\"Player one entered \" + pOne);\n      this.setState({\n        gameStage: 2,\n        input: ''\n      });\n    } else if (this.state.gameStage === 2) {\n      pTwo = this.state.input;\n      this.setState({\n        gameStage: 3,\n        input: ''\n      });\n      alert(\"Player two entered \" + pTwo);\n    } else {\n      alert(\"what is happening\");\n    }\n\n    this.setState({\n      input: ''\n    });\n  }\n\n  updateInput(evt) {\n    this.setState({\n      input: evt.target.value\n    });\n  }\n\n  calcRes() {\n    if (pOne === pTwo) {\n      return 0;\n    } else if (pOne !== pTwo) {\n      return 1;\n    } else if (pOne + pTwo === maxO) {\n      return 2;\n    }\n  }\n\n  render() {\n    let status;\n    let playerInput = \"\";\n\n    if (maxO) {\n      status = \"\";\n    } else {\n      status = \"Please enter a maximum Odd\";\n    }\n\n    if (this.state.gameStage === 1) {\n      playerInput = \"Player One, remember number between 1 and \" + maxO;\n    } else if (this.state.gameStage === 2) {\n      playerInput = \"Player Two, remember number between 1 and \" + maxO;\n    }\n\n    if (this.state.gameStage === 3) {\n      outPut = this.calcRes();\n      alert(\"output is: \" + outPut);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: playerInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.input,\n          onChange: this.updateInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 85\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 90\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.addValue,\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Results extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayResults: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"resultsWrap\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: maxO\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //0 - getting input, 1 - calculating animation, 2 - ready to display results\n      gameState: true\n    };\n  }\n\n  getResults() {\n    if (outPut !== null) {\n      this.setState({\n        gameState: false\n      });\n    }\n  }\n\n  render() {\n    console.log(\"we out here\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.gameState ? /*#__PURE__*/_jsxDEV(Hello, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 32\n      }, this) : /*#__PURE__*/_jsxDEV(Results, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 44\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 155,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["/Users/mariosmastermachinezeta/Odds Game/odds-game/src/index.js"],"names":["React","ReactDOM","reportWebVitals","pOne","pTwo","maxO","outPut","flag","Hello","Component","constructor","props","state","input","gameStage","addValue","bind","updateInput","evt","console","log","preventDefault","alert","setState","target","value","calcRes","render","status","playerInput","Results","displayResults","Board","gameState","getResults","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nlet pOne;\nlet pTwo;\nlet maxO;\nlet outPut = null;\nlet flag = 0;\n\nclass Hello extends React.Component{\n    constructor(props)\n    {\n      super(props);\n      this.state = {\n        input:'',\n        //0 - start, 1 - maxOdd set, 2 - playerOne set, 3 - playerTwo set \n        gameStage: 0,\n      };\n      this.addValue = this.addValue.bind(this);\n      this.updateInput = this.updateInput.bind(this);\n    }\n    \n    addValue(evt)\n    {\n      console.log(\"Passing: \"+ this.state.input)\n      evt.preventDefault();\n      if(this.state.gameStage === 0)\n      {\n        maxO = this.state.input;\n        alert('Your input value is: ' + maxO);\n        this.setState({gameStage: 1, input:''});\n\n      }\n      else if(this.state.gameStage === 1){\n        pOne = this.state.input;\n        alert(\"Player one entered \" + pOne);\n        this.setState({gameStage: 2, input:''});\n      }\n      else if (this.state.gameStage === 2) {\n        pTwo = this.state.input;\n        this.setState({gameStage: 3,input:''});\n        alert(\"Player two entered \" + pTwo);\n      }\n      else{\n        alert(\"what is happening\");\n      }\n      this.setState({input: ''});\n    }\n\n    updateInput(evt){\n       this.setState({input: evt.target.value});\n    }\n\n    calcRes() {\n      if (pOne === pTwo) {\n        return 0;\n      } else if (pOne !== pTwo) {\n        return 1;\n      } else if (pOne + pTwo === maxO) {\n        return 2;\n      }\n    }\n    \n    render()\n    {\n      let status;\n      let playerInput=\"\";\n      if (maxO) {\n        status = \"\";\n      }\n      else{\n        status = \"Please enter a maximum Odd\";\n      }\n\n      if(this.state.gameStage === 1){\n        playerInput = \"Player One, remember number between 1 and \" + maxO;\n      }\n      else if(this.state.gameStage === 2){\n        playerInput = \"Player Two, remember number between 1 and \" + maxO;\n      }\n\n      if(this.state.gameStage === 3){\n        outPut = this.calcRes();\n        alert(\"output is: \" + outPut);\n      }\n      return (\n      \n      <div>\n        <div>\n        {status}\n        </div>\n        <div>\n          {playerInput}\n        </div>\n\n        <form>\n          <input type=\"text\" value={this.state.input} onChange={this.updateInput} /><br/><br/>\n          <button onClick={this.addValue} type=\"submit\">Submit</button>\n        </form>\n      </div>\n      );\n    }\n  }\n\nclass Results extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      displayResults: false,\n    };\n  }\n\n  render(){\n    return(\n      <div id=\"resultsWrap\">\n        <div> \n          { maxO }\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Board extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      //0 - getting input, 1 - calculating animation, 2 - ready to display results\n      gameState: true\n    };\n  }\n\n  getResults(){\n    if(outPut !== null){\n      this.setState({ gameState: false })\n    }\n  }\n\n  render()\n  {\n    console.log(\"we out here\");\n\n    return(\n      <div>\n      { this.state.gameState ? <Hello /> : <Results /> }\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <Board />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}