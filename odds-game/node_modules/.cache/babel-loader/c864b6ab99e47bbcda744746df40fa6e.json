{"ast":null,"code":"var _jsxFileName = \"/Users/mariosmastermachinezeta/Odds Game/odds-game/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'; //import App from './App';\n\nimport reportWebVitals from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet pOne;\nlet pTwo;\nlet maxO;\nlet outPut = null;\nlet flag = 0;\n\nclass Hello extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: '',\n      //0 - start, 1 - maxOdd set, 2 - playerOne set, 3 - playerTwo set \n      gameStage: 0\n    };\n    this.addValue = this.addValue.bind(this);\n    this.updateInput = this.updateInput.bind(this);\n  }\n\n  addValue(evt) {\n    console.log(\"Passing: \" + this.state.input);\n    evt.preventDefault();\n\n    if (this.state.gameStage === 0) {\n      maxO = this.state.input; //alert('Your input value is: ' + maxO);\n\n      this.setState({\n        gameStage: 1,\n        input: ''\n      });\n    } else {\n      if (this.state.input < maxO) {\n        if (this.state.gameStage === 1) {\n          pOne = this.state.input; //alert(\"Player one entered \" + pOne);\n\n          this.setState({\n            gameStage: 2,\n            input: ''\n          });\n        } else if (this.state.gameStage === 2) {\n          pTwo = this.state.input;\n          this.setState({\n            gameStage: 3,\n            input: ''\n          }); //alert(\"Player two entered \" + pTwo);\n\n          flag = 1;\n        } else {\n          alert(\"what is happening\");\n        }\n      } else {\n        alert(\"Please choose a number between 1 and \" + maxO);\n      }\n    }\n\n    this.setState({\n      input: ''\n    });\n  }\n\n  updateInput(evt) {\n    this.setState({\n      input: evt.target.value\n    });\n  }\n\n  calcRes() {\n    //if the guesses match\n    console.log(pOne + \" :p1, p2: \" + pTwo);\n    let sum = parseInt(pOne) + parseInt(pTwo);\n    console.log(\"pOne + pTwo: \" + sum);\n\n    if (pOne === pTwo) {\n      return 0;\n    } //if they add up to the max\n    else if (sum == maxO) {\n        return 2;\n      } //if they dont match\n      else if (pOne !== pTwo) {\n          return 1;\n        }\n  }\n\n  render() {\n    let status = null;\n    let playerInput = \"\";\n\n    if (!maxO) {\n      status = \"Please enter a maximum Odd\";\n    }\n\n    if (this.state.gameStage === 1) {\n      playerInput = \"Player One, a number between 1 and \" + maxO;\n    } else if (this.state.gameStage === 2) {\n      playerInput = \"Player Two, a number between 1 and \" + maxO;\n    }\n\n    if (this.state.gameStage === 3 && outPut === null) {\n      outPut = this.calcRes();\n      this.props.check(); //alert(\"output is: \" + outPut);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: playerInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.input,\n          onChange: this.updateInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 85\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 90\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.addValue,\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Results extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayResults: false,\n      countdown: 3\n    };\n    this.timer = 0;\n    this.startCounter = this.startCounter.bind(this);\n    this.counter = this.counter.bind(this);\n  }\n\n  startCounter() {\n    if (this.timer === 0 && this.state.countdown > 0) {\n      this.timer = setInterval(this.counter, 1000);\n    }\n  }\n\n  counter() {\n    let seconds = this.state.countdown - 1;\n    this.setState({\n      countdown: seconds\n    });\n    console.log(\"countdown counter: \" + seconds);\n\n    if (seconds === 0) {\n      clearInterval(this.timer);\n      this.setState({\n        displayResults: true\n      });\n    }\n  }\n\n  render() {\n    let outro = \"\";\n\n    if (outPut === 0) {\n      outro = \"Yikes, it's a match!\";\n    } else if (outPut === 1) {\n      outro = \"Better luck nexttime!\";\n    } else if (outPut === 2) {\n      outro = \"How the tables have turned...\";\n    }\n\n    let count = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: this.state.countdown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }, this);\n\n    let res = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: outro\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: pOne\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: pTwo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this);\n\n    console.log(outPut + \" called it\"); //     if(outPut !== null){\n    //     for(let i = 0; i < 3; i++){\n    //         // setTimeout(() => {\n    //  //         console.log(i);\n    //       this.counter(count, i);\n    //     //     // }, 1000);\n    //        };\n    //     } \n\n    if (this.state.countdown > 0) {\n      this.startCounter();\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"resultsWrap\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.displayResults ? res : count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getResults = () => {\n      if (flag === 1) {\n        console.log(outPut + \": b4\");\n        this.setState({\n          gameState: false\n        });\n        console.log(outPut + \": after\");\n      }\n    };\n\n    this.state = {\n      //0 - getting input, 1 - calculating animation, 2 - ready to display results\n      gameState: true\n    };\n  }\n\n  render() {\n    console.log(\"we out here\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.gameState ? /*#__PURE__*/_jsxDEV(Hello, {\n        check: this.getResults\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 32\n      }, this) : /*#__PURE__*/_jsxDEV(Results, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 67\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 233,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["/Users/mariosmastermachinezeta/Odds Game/odds-game/src/index.js"],"names":["React","ReactDOM","reportWebVitals","pOne","pTwo","maxO","outPut","flag","Hello","Component","constructor","props","state","input","gameStage","addValue","bind","updateInput","evt","console","log","preventDefault","setState","alert","target","value","calcRes","sum","parseInt","render","status","playerInput","check","Results","displayResults","countdown","timer","startCounter","counter","setInterval","seconds","clearInterval","outro","count","res","Board","getResults","gameState","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP,C,CACA;;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,IAAIC,IAAJ;AACA,IAAIC,IAAJ;AACA,IAAIC,IAAJ;AACA,IAAIC,MAAM,GAAG,IAAb;AACA,IAAIC,IAAI,GAAG,CAAX;;AAEA,MAAMC,KAAN,SAAoBR,KAAK,CAACS,SAA1B,CAAmC;AAC/BC,EAAAA,WAAW,CAACC,KAAD,EACX;AACE,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAC,EADK;AAEX;AACAC,MAAAA,SAAS,EAAE;AAHA,KAAb;AAKA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDD,EAAAA,QAAQ,CAACG,GAAD,EACR;AACEC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAa,KAAKR,KAAL,CAAWC,KAApC;AACAK,IAAAA,GAAG,CAACG,cAAJ;;AACA,QAAG,KAAKT,KAAL,CAAWE,SAAX,KAAyB,CAA5B,EACA;AACET,MAAAA,IAAI,GAAG,KAAKO,KAAL,CAAWC,KAAlB,CADF,CAEE;;AACA,WAAKS,QAAL,CAAc;AAACR,QAAAA,SAAS,EAAE,CAAZ;AAAeD,QAAAA,KAAK,EAAC;AAArB,OAAd;AAED,KAND,MAOI;AACF,UAAG,KAAKD,KAAL,CAAWC,KAAX,GAAmBR,IAAtB,EAA2B;AACzB,YAAG,KAAKO,KAAL,CAAWE,SAAX,KAAyB,CAA5B,EAA8B;AAC5BX,UAAAA,IAAI,GAAG,KAAKS,KAAL,CAAWC,KAAlB,CAD4B,CAE5B;;AACA,eAAKS,QAAL,CAAc;AAACR,YAAAA,SAAS,EAAE,CAAZ;AAAeD,YAAAA,KAAK,EAAC;AAArB,WAAd;AACD,SAJD,MAKK,IAAI,KAAKD,KAAL,CAAWE,SAAX,KAAyB,CAA7B,EAAgC;AACnCV,UAAAA,IAAI,GAAG,KAAKQ,KAAL,CAAWC,KAAlB;AACA,eAAKS,QAAL,CAAc;AAACR,YAAAA,SAAS,EAAE,CAAZ;AAAcD,YAAAA,KAAK,EAAC;AAApB,WAAd,EAFmC,CAGnC;;AACAN,UAAAA,IAAI,GAAG,CAAP;AACD,SALI,MAMD;AACFgB,UAAAA,KAAK,CAAC,mBAAD,CAAL;AACD;AACF,OAfD,MAgBI;AACFA,QAAAA,KAAK,CAAC,0CAA0ClB,IAA3C,CAAL;AACD;AACF;;AACD,SAAKiB,QAAL,CAAc;AAACT,MAAAA,KAAK,EAAE;AAAR,KAAd;AACD;;AAEDI,EAAAA,WAAW,CAACC,GAAD,EAAK;AACb,SAAKI,QAAL,CAAc;AAACT,MAAAA,KAAK,EAAEK,GAAG,CAACM,MAAJ,CAAWC;AAAnB,KAAd;AACF;;AAEDC,EAAAA,OAAO,GAAG;AACR;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYjB,IAAI,GAAG,YAAP,GAAsBC,IAAlC;AAEA,QAAIuB,GAAG,GAAGC,QAAQ,CAACzB,IAAD,CAAR,GAAiByB,QAAQ,CAACxB,IAAD,CAAnC;AACAe,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBO,GAA9B;;AACA,QAAIxB,IAAI,KAAKC,IAAb,EAAmB;AACjB,aAAO,CAAP;AACD,KAFD,CAGA;AAHA,SAIK,IAAIuB,GAAG,IAAItB,IAAX,EAAiB;AACpB,eAAO,CAAP;AACD,OAFI,CAGL;AAHK,WAIA,IAAIF,IAAI,KAAKC,IAAb,EAAmB;AACtB,iBAAO,CAAP;AAED;AACF;;AAEDyB,EAAAA,MAAM,GACN;AACE,QAAIC,MAAM,GAAG,IAAb;AACA,QAAIC,WAAW,GAAC,EAAhB;;AACA,QAAI,CAAC1B,IAAL,EAAW;AACTyB,MAAAA,MAAM,GAAG,4BAAT;AACD;;AAED,QAAG,KAAKlB,KAAL,CAAWE,SAAX,KAAyB,CAA5B,EAA8B;AAC5BiB,MAAAA,WAAW,GAAG,wCAAwC1B,IAAtD;AACD,KAFD,MAGK,IAAG,KAAKO,KAAL,CAAWE,SAAX,KAAyB,CAA5B,EAA8B;AACjCiB,MAAAA,WAAW,GAAG,wCAAwC1B,IAAtD;AACD;;AAED,QAAG,KAAKO,KAAL,CAAWE,SAAX,KAAyB,CAAzB,IAA8BR,MAAM,KAAK,IAA5C,EAAiD;AAC/CA,MAAAA,MAAM,GAAG,KAAKoB,OAAL,EAAT;AACA,WAAKf,KAAL,CAAWqB,KAAX,GAF+C,CAG/C;AAED;;AACD,wBAEA;AAAA,8BACE;AAAA,kBACCF;AADD;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA,kBACGC;AADH;AAAA;AAAA;AAAA;AAAA,cAJF,eAQE;AAAA,gCACE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWC,KAArC;AAA4C,UAAA,QAAQ,EAAE,KAAKI;AAA3D;AAAA;AAAA;AAAA;AAAA,gBADF,eAC4E;AAAA;AAAA;AAAA;AAAA,gBAD5E,eACiF;AAAA;AAAA;AAAA;AAAA,gBADjF,eAEE;AAAQ,UAAA,OAAO,EAAE,KAAKF,QAAtB;AAAgC,UAAA,IAAI,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAgBD;;AA7G8B;;AAgHnC,MAAMkB,OAAN,SAAsBjC,KAAK,CAACS,SAA5B,CAAqC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXsB,MAAAA,cAAc,EAAE,KADL;AAEXC,MAAAA,SAAS,EAAE;AAFA,KAAb;AAIA,SAAKC,KAAL,GAAa,CAAb;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBrB,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKsB,OAAL,GAAe,KAAKA,OAAL,CAAatB,IAAb,CAAkB,IAAlB,CAAf;AACD;;AAEDqB,EAAAA,YAAY,GAAG;AACb,QAAI,KAAKD,KAAL,KAAe,CAAf,IAAoB,KAAKxB,KAAL,CAAWuB,SAAX,GAAuB,CAA/C,EAAkD;AAChD,WAAKC,KAAL,GAAaG,WAAW,CAAC,KAAKD,OAAN,EAAe,IAAf,CAAxB;AACD;AACF;;AAGDA,EAAAA,OAAO,GAAE;AACP,QAAIE,OAAO,GAAG,KAAK5B,KAAL,CAAWuB,SAAX,GAAuB,CAArC;AACA,SAAKb,QAAL,CAAc;AACZa,MAAAA,SAAS,EAAEK;AADC,KAAd;AAGArB,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAuBoB,OAAnC;;AACA,QAAGA,OAAO,KAAK,CAAf,EAAiB;AACfC,MAAAA,aAAa,CAAC,KAAKL,KAAN,CAAb;AACA,WAAKd,QAAL,CAAc;AAACY,QAAAA,cAAc,EAAE;AAAjB,OAAd;AACD;AACF;;AAIDL,EAAAA,MAAM,GAAE;AAEN,QAAIa,KAAK,GAAG,EAAZ;;AAEA,QAAIpC,MAAM,KAAK,CAAf,EAAkB;AAChBoC,MAAAA,KAAK,GAAG,sBAAR;AACD,KAFD,MAGK,IAAIpC,MAAM,KAAK,CAAf,EAAkB;AACrBoC,MAAAA,KAAK,GAAG,uBAAR;AACD,KAFI,MAGA,IAAIpC,MAAM,KAAK,CAAf,EAAkB;AACrBoC,MAAAA,KAAK,GAAG,+BAAR;AACD;;AAED,QAAIC,KAAK,gBAAG;AAAA,gBAAI,KAAK/B,KAAL,CAAWuB;AAAf;AAAA;AAAA;AAAA;AAAA,YAAZ;;AACA,QAAIS,GAAG,gBACL;AAAA,8BACE;AAAA,kBAAMF;AAAN;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAMvC;AAAN;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,kBAAMC;AAAN;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;;AAOAe,IAAAA,OAAO,CAACC,GAAR,CAAYd,MAAM,GAAC,YAAnB,EAtBM,CAuBV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACI,QAAG,KAAKM,KAAL,CAAWuB,SAAX,GAAuB,CAA1B,EAA4B;AAC1B,WAAKE,YAAL;AACD;;AAED,wBACE;AAAK,MAAA,EAAE,EAAC,aAAR;AAAA,6BACE;AAAA,kBACI,KAAKzB,KAAL,CAAWsB,cAAX,GAA4BU,GAA5B,GAAkCD;AADtC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AA3EkC;;AA8ErC,MAAME,KAAN,SAAoB7C,KAAK,CAACS,SAA1B,CAAmC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAQlBmC,UARkB,GAQL,MAAM;AACjB,UAAGvC,IAAI,KAAK,CAAZ,EAAc;AACZY,QAAAA,OAAO,CAACC,GAAR,CAAYd,MAAM,GAAE,MAApB;AACA,aAAKgB,QAAL,CAAc;AAAEyB,UAAAA,SAAS,EAAE;AAAb,SAAd;AACA5B,QAAAA,OAAO,CAACC,GAAR,CAAYd,MAAM,GAAG,SAArB;AACD;AACF,KAdiB;;AAEhB,SAAKM,KAAL,GAAa;AACX;AACAmC,MAAAA,SAAS,EAAE;AAFA,KAAb;AAID;;AAUDlB,EAAAA,MAAM,GACN;AACEV,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AAEA,wBACE;AAAA,gBACE,KAAKR,KAAL,CAAWmC,SAAX,gBAAuB,QAAC,KAAD;AAAO,QAAA,KAAK,EAAE,KAAKD;AAAnB;AAAA;AAAA;AAAA;AAAA,cAAvB,gBAA0D,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAD5D;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AA1BgC;;AA6BnC7C,QAAQ,CAAC4B,MAAT,eACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,QADF,EAEEmB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF,E,CAKA;AACA;AACA;;AACA/C,eAAe","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nlet pOne;\nlet pTwo;\nlet maxO;\nlet outPut = null;\nlet flag = 0;\n\nclass Hello extends React.Component{\n    constructor(props)\n    {\n      super(props);\n      this.state = {\n        input:'',\n        //0 - start, 1 - maxOdd set, 2 - playerOne set, 3 - playerTwo set \n        gameStage: 0,\n      };\n      this.addValue = this.addValue.bind(this);\n      this.updateInput = this.updateInput.bind(this);\n    }\n    \n    addValue(evt)\n    {\n      console.log(\"Passing: \"+ this.state.input)\n      evt.preventDefault();\n      if(this.state.gameStage === 0)\n      {\n        maxO = this.state.input;\n        //alert('Your input value is: ' + maxO);\n        this.setState({gameStage: 1, input:''});\n\n      }\n      else{\n        if(this.state.input < maxO){\n          if(this.state.gameStage === 1){\n            pOne = this.state.input;\n            //alert(\"Player one entered \" + pOne);\n            this.setState({gameStage: 2, input:''});\n          }\n          else if (this.state.gameStage === 2) {\n            pTwo = this.state.input;\n            this.setState({gameStage: 3,input:''});\n            //alert(\"Player two entered \" + pTwo);\n            flag = 1;\n          }\n          else{\n            alert(\"what is happening\");\n          }\n        }\n        else{\n          alert(\"Please choose a number between 1 and \" + maxO);\n        }\n      } \n      this.setState({input: ''});\n    }\n\n    updateInput(evt){\n       this.setState({input: evt.target.value});\n    }\n\n    calcRes() {\n      //if the guesses match\n      console.log(pOne + \" :p1, p2: \" + pTwo);\n      \n      let sum = parseInt(pOne) + parseInt(pTwo);\n      console.log(\"pOne + pTwo: \" + sum);\n      if (pOne === pTwo) {\n        return 0;\n      }\n      //if they add up to the max\n      else if (sum == maxO) {\n        return 2;\n      }\n      //if they dont match\n      else if (pOne !== pTwo) {\n        return 1;\n      \n      }\n    }\n    \n    render()\n    {\n      let status = null;\n      let playerInput=\"\";\n      if (!maxO) {\n        status = \"Please enter a maximum Odd\";\n      }\n\n      if(this.state.gameStage === 1){\n        playerInput = \"Player One, a number between 1 and \" + maxO;\n      }\n      else if(this.state.gameStage === 2){\n        playerInput = \"Player Two, a number between 1 and \" + maxO;\n      }\n\n      if(this.state.gameStage === 3 && outPut === null){\n        outPut = this.calcRes();\n        this.props.check();\n        //alert(\"output is: \" + outPut);\n\n      }\n      return (\n      \n      <div>\n        <div>\n        {status}\n        </div>\n        <div>\n          {playerInput}\n        </div>\n\n        <form>\n          <input type=\"text\" value={this.state.input} onChange={this.updateInput} /><br/><br/>\n          <button onClick={this.addValue} type=\"submit\">Submit</button>\n        </form>\n      </div>\n      );\n    }\n  }\n\nclass Results extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      displayResults: false,\n      countdown: 3\n    };\n    this.timer = 0;\n    this.startCounter = this.startCounter.bind(this);\n    this.counter = this.counter.bind(this);\n  }\n\n  startCounter() {\n    if (this.timer === 0 && this.state.countdown > 0) {\n      this.timer = setInterval(this.counter, 1000);\n    }\n  }\n\n\n  counter(){\n    let seconds = this.state.countdown - 1;\n    this.setState({\n      countdown: seconds\n    });\n    console.log(\"countdown counter: \" +seconds);\n    if(seconds === 0){\n      clearInterval(this.timer);\n      this.setState({displayResults: true});\n    }\n  }\n  \n  \n\n  render(){\n\n    let outro = \"\";\n\n    if (outPut === 0) {\n      outro = \"Yikes, it's a match!\";\n    }\n    else if (outPut === 1) {\n      outro = \"Better luck nexttime!\";\n    }\n    else if (outPut === 2) {\n      outro = \"How the tables have turned...\";\n    }\n\n    let count = <p>{this.state.countdown}</p>;\n    let res =\n      <div>\n        <div>{outro}</div>\n        <div>{pOne}</div>\n        <div>{pTwo}</div>\n      </div>;\n\n    console.log(outPut+\" called it\");\n//     if(outPut !== null){\n//     for(let i = 0; i < 3; i++){\n//         // setTimeout(() => {\n//  //         console.log(i);\n//       this.counter(count, i);\n//     //     // }, 1000);\n//        };\n//     } \n    if(this.state.countdown > 0){\n      this.startCounter();\n    }\n  \n    return(\n      <div id=\"resultsWrap\">\n        <div> \n          { this.state.displayResults ? res : count }\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Board extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      //0 - getting input, 1 - calculating animation, 2 - ready to display results\n      gameState: true\n    };\n  }\n\n  getResults = () => {\n    if(flag === 1){\n      console.log(outPut +\": b4\");\n      this.setState({ gameState: false });\n      console.log(outPut + \": after\");\n    }\n  }\n\n  render()\n  {\n    console.log(\"we out here\");\n\n    return(\n      <div>\n      { this.state.gameState ? <Hello check={this.getResults}/> : <Results /> }\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <Board />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}